
terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "~> 3.80.0"
    }
  }

  required_version = ">= 1.3.0"
}

provider "azurerm" {
  features {}
  skip_provider_registration = true
}

data "azurerm_client_config" "current" {}

# Networking Resource Group
module "networking_rg" {
  source   = "git::https://github.com/mukeshbharathigeakminds/terraform-azurerm-resource-group.git"
  name     = "test-networking-rg"
  location = "East US"
  tags = {
    Environment = "Test"
    Project     = "Testing"
    cost-center = "testing"
  }
}

# Storage Resource Group
module "storage_rg" {
  source   = "git::https://github.com/mukeshbharathigeakminds/terraform-azurerm-resource-group.git"
  name     = "test-storage-rg"
  location = "East US"
  tags = {
    Environment = "Test"
    Project     = "Testing"
    cost-center = "testing"
  }
}

resource "azurerm_virtual_network" "test_vnet" {
  name                = "test-vnet-01"
  address_space       = ["10.2.0.0/16"]
  location            = module.networking_rg.location
  resource_group_name = module.networking_rg.name

  tags = {
    Environment = "Test"
    Project     = "Testing"
  }
}

resource "azurerm_storage_account" "test_storage_acct" {
  name                     = "teststorageacct01"
  resource_group_name      = module.storage_rg.name
  location                 = module.storage_rg.location
  account_tier             = "Standard"
  account_replication_type = "LRS"

  tags = {
    Environment = "Test"
    Project     = "Testing"
  }
}

resource "azurerm_role_assignment" "storage_owner" {
  scope              = azurerm_storage_account.test_storage_acct.id
  role_definition_id = "/subscriptions/${data.azurerm_client_config.current.subscription_id}/providers/Microsoft.Authorization/roleDefinitions/b7e6dc6d-f1e8-4753-8033-0f276bb0955b"
  principal_id       = data.azurerm_client_config.current.object_id
  principal_type     = "User"
}

resource "azurerm_role_assignment" "storage_contributor" {
  scope              = azurerm_storage_account.test_storage_acct.id
  role_definition_id = "/subscriptions/${data.azurerm_client_config.current.subscription_id}/providers/Microsoft.Authorization/roleDefinitions/ba92f5b4-2d11-453d-a403-e96b0029c9fe"
  principal_id       = data.azurerm_client_config.current.object_id
  principal_type     = "User"
}

resource "azurerm_role_assignment" "storage_account_contributor" {
  scope              = azurerm_storage_account.test_storage_acct.id
  role_definition_id = "/subscriptions/${data.azurerm_client_config.current.subscription_id}/providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab"
  principal_id       = data.azurerm_client_config.current.object_id
  principal_type     = "User"
}

resource "azurerm_role_assignment" "storage_reader" {
  scope              = azurerm_storage_account.test_storage_acct.id
  role_definition_id = "/subscriptions/${data.azurerm_client_config.current.subscription_id}/providers/Microsoft.Authorization/roleDefinitions/acdd72a7-3385-48ef-bd42-f606fba81ae7"
  principal_id       = data.azurerm_client_config.current.object_id
  principal_type     = "User"
}

resource "azurerm_network_interface" "test_vm_nic" {
  name                = "test-vm-nic"
  location            = module.networking_rg.location
  resource_group_name = module.networking_rg.name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.main.id
    private_ip_address_allocation = "Dynamic"
  }

  tags = {
    Environment = "Test"
    Project     = "Testing"
  }
}

resource "azurerm_linux_virtual_machine" "test_vm" {
  name                = "test-vm"
  resource_group_name = module.networking_rg.name
  location            = module.networking_rg.location
  size                = "Standard_B2s"
  admin_username      = "azureuser"

  disable_password_authentication = true

  network_interface_ids = [azurerm_network_interface.test_vm_nic.id]

  admin_ssh_key {
    username   = "azureuser"
    public_key = "ssh-rsa AAAAB3NzaC1yc2E... (your public key)"
  }

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-focal"
    sku       = "20_04-lts-gen2"
    version   = "latest"
  }

  tags = {
    Environment = "Test"
    Project     = "Testing"
  }
}

resource "azurerm_role_assignment" "vm_contributor" {
  scope              = azurerm_linux_virtual_machine.test_vm.id
  role_definition_id = "/subscriptions/${data.azurerm_client_config.current.subscription_id}/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
  principal_id       = data.azurerm_client_config.current.object_id
  principal_type     = "User"
}

resource "azurerm_role_assignment" "vm_owner" {
  scope              = azurerm_linux_virtual_machine.test_vm.id
  role_definition_id = "/subscriptions/${data.azurerm_client_config.current.subscription_id}/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
  principal_id       = data.azurerm_client_config.current.object_id
  principal_type     = "User"
}

resource "azurerm_role_assignment" "network_contributor" {
  scope              = azurerm_network_interface.test_vm_nic.id
  role_definition_id = "/subscriptions/${data.azurerm_client_config.current.subscription_id}/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
  principal_id       = data.azurerm_client_config.current.object_id
  principal_type     = "User"
}

resource "azurerm_role_assignment" "vm_reader" {
  scope              = azurerm_linux_virtual_machine.test_vm.id
  role_definition_id = "/subscriptions/${data.azurerm_client_config.current.subscription_id}/providers/Microsoft.Authorization/roleDefinitions/acdd72a7-3385-48ef-bd42-f606fba81ae7"
  principal_id       = data.azurerm_client_config.current.object_id
  principal_type     = "User"
}
